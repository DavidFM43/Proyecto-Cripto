from cryptools.substitution import encrypt, decrypt, attack


def test_encrypt():
    assert (
        encrypt("thisciphertextcannotbedecrypted", "XNYAHPOGZQWBTSFLRCVMUEKJDI")
        == "MGZVYZLGHCMHJMYXSSFMNHAHYCDLMHA"
    )


def test_decrypt():
    assert (
        decrypt("MGZVYZLGHCMHJMYXSSFMNHAHYCDLMHA", "XNYAHPOGZQWBTSFLRCVMUEKJDI")
        == "thisciphertextcannotbedecrypted"
    )


def test_attack():
    cipher_text = (
        "YIFQFMZRWQFYVECFMDZPCVMRZWNMDZVEJBTXCDDUMJ"
        "NDIFEFMDZCDMOZKCEYFCJMYRNCWJCSZREXCHZUNMXZ"
        "NZUCDRJXYYSMRTMEYIFZWDYVZVYFZUMRZCRWNZDZJJ"
        "XZWGCHSMRNMDHNCMFQCHZJMXJZWIEJYUCFWDJNZDIR"
    )
    info = attack(cipher_text)
    assert info["letters"] == (
        ("Y", 10),
        ("I", 5),
        ("F", 11),
        ("Q", 3),
        ("M", 16),
        ("Z", 20),
        ("R", 10),
        ("W", 8),
        ("V", 5),
        ("E", 7),
        ("C", 15),
        ("D", 13),
        ("P", 1),
        ("N", 9),
        ("J", 11),
        ("B", 1),
        ("T", 2),
        ("X", 6),
        ("U", 5),
        ("O", 1),
        ("K", 1),
        ("S", 3),
        ("H", 4),
        ("G", 1),
    )
    assert info["bigrams"] == (
        (("Y", "I"), 2),
        (("I", "F"), 3),
        (("F", "Q"), 2),
        (("Q", "F"), 2),
        (("F", "M"), 3),
        (("M", "Z"), 1),
        (("Z", "R"), 2),
        (("R", "W"), 2),
        (("W", "Q"), 1),
        (("F", "Y"), 1),
        (("Y", "V"), 2),
        (("V", "E"), 2),
        (("E", "C"), 1),
        (("C", "F"), 2),
        (("M", "D"), 4),
        (("D", "Z"), 4),
        (("Z", "P"), 1),
        (("P", "C"), 1),
        (("C", "V"), 1),
        (("V", "M"), 1),
        (("M", "R"), 4),
        (("R", "Z"), 2),
        (("Z", "W"), 4),
        (("W", "N"), 2),
        (("N", "M"), 3),
        (("Z", "V"), 2),
        (("E", "J"), 2),
        (("J", "B"), 1),
        (("B", "T"), 1),
        (("T", "X"), 1),
        (("X", "C"), 2),
        (("C", "D"), 3),
        (("D", "D"), 1),
        (("D", "U"), 1),
        (("U", "M"), 2),
        (("M", "J"), 1),
        (("J", "N"), 2),
        (("N", "D"), 1),
        (("D", "I"), 2),
        (("F", "E"), 1),
        (("E", "F"), 1),
        (("Z", "C"), 2),
        (("D", "M"), 1),
        (("M", "O"), 1),
        (("O", "Z"), 1),
        (("Z", "K"), 1),
        (("K", "C"), 1),
        (("C", "E"), 1),
        (("E", "Y"), 2),
        (("Y", "F"), 2),
        (("F", "C"), 1),
        (("C", "J"), 1),
        (("J", "M"), 2),
        (("M", "Y"), 1),
        (("Y", "R"), 1),
        (("R", "N"), 2),
        (("N", "C"), 2),
        (("C", "W"), 1),
        (("W", "J"), 1),
        (("J", "C"), 1),
        (("C", "S"), 1),
        (("S", "Z"), 1),
        (("R", "E"), 1),
        (("E", "X"), 1),
        (("C", "H"), 3),
        (("H", "Z"), 2),
        (("Z", "U"), 3),
        (("U", "N"), 1),
        (("M", "X"), 2),
        (("X", "Z"), 2),
        (("Z", "N"), 1),
        (("N", "Z"), 3),
        (("U", "C"), 2),
        (("D", "R"), 1),
        (("R", "J"), 1),
        (("J", "X"), 2),
        (("X", "Y"), 1),
        (("Y", "Y"), 1),
        (("Y", "S"), 1),
        (("S", "M"), 2),
        (("R", "T"), 1),
        (("T", "M"), 1),
        (("M", "E"), 1),
        (("F", "Z"), 2),
        (("W", "D"), 2),
        (("D", "Y"), 1),
        (("V", "Z"), 1),
        (("V", "Y"), 1),
        (("C", "R"), 1),
        (("Z", "D"), 2),
        (("Z", "J"), 2),
        (("J", "J"), 1),
        (("W", "G"), 1),
        (("G", "C"), 1),
        (("H", "S"), 1),
        (("D", "H"), 1),
        (("H", "N"), 1),
        (("C", "M"), 1),
        (("M", "F"), 1),
        (("Q", "C"), 1),
        (("X", "J"), 1),
        (("J", "Z"), 1),
        (("W", "I"), 1),
        (("I", "E"), 1),
        (("J", "Y"), 1),
        (("Y", "U"), 1),
        (("F", "W"), 1),
        (("D", "J"), 1),
        (("I", "R"), 1),
    )
    assert info["trigrams"] == (
        (("Y", "I", "F"), 2),
        (("I", "F", "Q"), 1),
        (("F", "Q", "F"), 1),
        (("Q", "F", "M"), 1),
        (("F", "M", "Z"), 1),
        (("M", "Z", "R"), 1),
        (("Z", "R", "W"), 1),
        (("R", "W", "Q"), 1),
        (("W", "Q", "F"), 1),
        (("Q", "F", "Y"), 1),
        (("F", "Y", "V"), 1),
        (("Y", "V", "E"), 1),
        (("V", "E", "C"), 1),
        (("E", "C", "F"), 1),
        (("C", "F", "M"), 1),
        (("F", "M", "D"), 2),
        (("M", "D", "Z"), 3),
        (("D", "Z", "P"), 1),
        (("Z", "P", "C"), 1),
        (("P", "C", "V"), 1),
        (("C", "V", "M"), 1),
        (("V", "M", "R"), 1),
        (("M", "R", "Z"), 2),
        (("R", "Z", "W"), 1),
        (("Z", "W", "N"), 1),
        (("W", "N", "M"), 1),
        (("N", "M", "D"), 2),
        (("D", "Z", "V"), 1),
        (("Z", "V", "E"), 1),
        (("V", "E", "J"), 1),
        (("E", "J", "B"), 1),
        (("J", "B", "T"), 1),
        (("B", "T", "X"), 1),
        (("T", "X", "C"), 1),
        (("X", "C", "D"), 1),
        (("C", "D", "D"), 1),
        (("D", "D", "U"), 1),
        (("D", "U", "M"), 1),
        (("U", "M", "J"), 1),
        (("M", "J", "N"), 1),
        (("J", "N", "D"), 1),
        (("N", "D", "I"), 1),
        (("D", "I", "F"), 1),
        (("I", "F", "E"), 1),
        (("F", "E", "F"), 1),
        (("E", "F", "M"), 1),
        (("D", "Z", "C"), 1),
        (("Z", "C", "D"), 1),
        (("C", "D", "M"), 1),
        (("D", "M", "O"), 1),
        (("M", "O", "Z"), 1),
        (("O", "Z", "K"), 1),
        (("Z", "K", "C"), 1),
        (("K", "C", "E"), 1),
        (("C", "E", "Y"), 1),
        (("E", "Y", "F"), 1),
        (("Y", "F", "C"), 1),
        (("F", "C", "J"), 1),
        (("C", "J", "M"), 1),
        (("J", "M", "Y"), 1),
        (("M", "Y", "R"), 1),
        (("Y", "R", "N"), 1),
        (("R", "N", "C"), 1),
        (("N", "C", "W"), 1),
        (("C", "W", "J"), 1),
        (("W", "J", "C"), 1),
        (("J", "C", "S"), 1),
        (("C", "S", "Z"), 1),
        (("S", "Z", "R"), 1),
        (("Z", "R", "E"), 1),
        (("R", "E", "X"), 1),
        (("E", "X", "C"), 1),
        (("X", "C", "H"), 1),
        (("C", "H", "Z"), 2),
        (("H", "Z", "U"), 1),
        (("Z", "U", "N"), 1),
        (("U", "N", "M"), 1),
        (("N", "M", "X"), 1),
        (("M", "X", "Z"), 1),
        (("X", "Z", "N"), 1),
        (("Z", "N", "Z"), 1),
        (("N", "Z", "U"), 1),
        (("Z", "U", "C"), 1),
        (("U", "C", "D"), 1),
        (("C", "D", "R"), 1),
        (("D", "R", "J"), 1),
        (("R", "J", "X"), 1),
        (("J", "X", "Y"), 1),
        (("X", "Y", "Y"), 1),
        (("Y", "Y", "S"), 1),
        (("Y", "S", "M"), 1),
        (("S", "M", "R"), 2),
        (("M", "R", "T"), 1),
        (("R", "T", "M"), 1),
        (("T", "M", "E"), 1),
        (("M", "E", "Y"), 1),
        (("E", "Y", "I"), 1),
        (("I", "F", "Z"), 1),
        (("F", "Z", "W"), 1),
        (("Z", "W", "D"), 1),
        (("W", "D", "Y"), 1),
        (("D", "Y", "V"), 1),
        (("Y", "V", "Z"), 1),
        (("V", "Z", "V"), 1),
        (("Z", "V", "Y"), 1),
        (("V", "Y", "F"), 1),
        (("Y", "F", "Z"), 1),
        (("F", "Z", "U"), 1),
        (("Z", "U", "M"), 1),
        (("U", "M", "R"), 1),
        (("R", "Z", "C"), 1),
        (("Z", "C", "R"), 1),
        (("C", "R", "W"), 1),
        (("R", "W", "N"), 1),
        (("W", "N", "Z"), 1),
        (("N", "Z", "D"), 2),
        (("Z", "D", "Z"), 1),
        (("D", "Z", "J"), 1),
        (("Z", "J", "J"), 1),
        (("J", "J", "X"), 1),
        (("J", "X", "Z"), 1),
        (("X", "Z", "W"), 1),
        (("Z", "W", "G"), 1),
        (("W", "G", "C"), 1),
        (("G", "C", "H"), 1),
        (("C", "H", "S"), 1),
        (("H", "S", "M"), 1),
        (("M", "R", "N"), 1),
        (("R", "N", "M"), 1),
        (("M", "D", "H"), 1),
        (("D", "H", "N"), 1),
        (("H", "N", "C"), 1),
        (("N", "C", "M"), 1),
        (("C", "M", "F"), 1),
        (("M", "F", "Q"), 1),
        (("F", "Q", "C"), 1),
        (("Q", "C", "H"), 1),
        (("H", "Z", "J"), 1),
        (("Z", "J", "M"), 1),
        (("J", "M", "X"), 1),
        (("M", "X", "J"), 1),
        (("X", "J", "Z"), 1),
        (("J", "Z", "W"), 1),
        (("Z", "W", "I"), 1),
        (("W", "I", "E"), 1),
        (("I", "E", "J"), 1),
        (("E", "J", "Y"), 1),
        (("J", "Y", "U"), 1),
        (("Y", "U", "C"), 1),
        (("U", "C", "F"), 1),
        (("C", "F", "W"), 1),
        (("F", "W", "D"), 1),
        (("W", "D", "J"), 1),
        (("D", "J", "N"), 1),
        (("J", "N", "Z"), 1),
        (("Z", "D", "I"), 1),
        (("D", "I", "R"), 1),
    )
